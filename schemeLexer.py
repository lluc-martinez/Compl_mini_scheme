# Generated from scheme.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,151,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,1,1,1,1,2,1,
        2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
        5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
        1,12,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,17,1,17,1,17,1,17,3,17,106,8,17,1,18,1,18,1,19,
        1,19,1,19,1,19,5,19,114,8,19,10,19,12,19,117,9,19,1,19,1,19,1,20,
        3,20,122,8,20,1,20,4,20,125,8,20,11,20,12,20,126,1,21,1,21,5,21,
        131,8,21,10,21,12,21,134,9,21,1,22,4,22,137,8,22,11,22,12,22,138,
        1,22,1,22,1,23,1,23,5,23,145,8,23,10,23,12,23,148,9,23,1,23,1,23,
        0,0,24,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
        25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
        47,24,1,0,6,3,0,10,10,13,13,34,34,1,0,48,57,7,0,42,43,45,45,47,47,
        60,62,65,90,95,95,97,122,7,0,42,43,45,45,47,57,60,63,65,90,95,95,
        97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,158,0,1,1,0,0,0,0,3,
        1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
        0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
        0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
        0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
        0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,49,1,0,0,0,3,51,1,0,0,0,5,53,1,
        0,0,0,7,56,1,0,0,0,9,61,1,0,0,0,11,65,1,0,0,0,13,71,1,0,0,0,15,73,
        1,0,0,0,17,75,1,0,0,0,19,77,1,0,0,0,21,79,1,0,0,0,23,81,1,0,0,0,
        25,83,1,0,0,0,27,86,1,0,0,0,29,89,1,0,0,0,31,91,1,0,0,0,33,94,1,
        0,0,0,35,105,1,0,0,0,37,107,1,0,0,0,39,109,1,0,0,0,41,121,1,0,0,
        0,43,128,1,0,0,0,45,136,1,0,0,0,47,142,1,0,0,0,49,50,5,40,0,0,50,
        2,1,0,0,0,51,52,5,41,0,0,52,4,1,0,0,0,53,54,5,105,0,0,54,55,5,102,
        0,0,55,6,1,0,0,0,56,57,5,99,0,0,57,58,5,111,0,0,58,59,5,110,0,0,
        59,60,5,100,0,0,60,8,1,0,0,0,61,62,5,108,0,0,62,63,5,101,0,0,63,
        64,5,116,0,0,64,10,1,0,0,0,65,66,5,113,0,0,66,67,5,117,0,0,67,68,
        5,111,0,0,68,69,5,116,0,0,69,70,5,101,0,0,70,12,1,0,0,0,71,72,5,
        43,0,0,72,14,1,0,0,0,73,74,5,45,0,0,74,16,1,0,0,0,75,76,5,42,0,0,
        76,18,1,0,0,0,77,78,5,47,0,0,78,20,1,0,0,0,79,80,5,62,0,0,80,22,
        1,0,0,0,81,82,5,60,0,0,82,24,1,0,0,0,83,84,5,62,0,0,84,85,5,61,0,
        0,85,26,1,0,0,0,86,87,5,60,0,0,87,88,5,61,0,0,88,28,1,0,0,0,89,90,
        5,61,0,0,90,30,1,0,0,0,91,92,5,60,0,0,92,93,5,62,0,0,93,32,1,0,0,
        0,94,95,5,100,0,0,95,96,5,101,0,0,96,97,5,102,0,0,97,98,5,105,0,
        0,98,99,5,110,0,0,99,100,5,101,0,0,100,34,1,0,0,0,101,102,5,35,0,
        0,102,106,5,116,0,0,103,104,5,35,0,0,104,106,5,102,0,0,105,101,1,
        0,0,0,105,103,1,0,0,0,106,36,1,0,0,0,107,108,5,39,0,0,108,38,1,0,
        0,0,109,115,5,34,0,0,110,114,8,0,0,0,111,112,5,92,0,0,112,114,5,
        34,0,0,113,110,1,0,0,0,113,111,1,0,0,0,114,117,1,0,0,0,115,113,1,
        0,0,0,115,116,1,0,0,0,116,118,1,0,0,0,117,115,1,0,0,0,118,119,5,
        34,0,0,119,40,1,0,0,0,120,122,5,45,0,0,121,120,1,0,0,0,121,122,1,
        0,0,0,122,124,1,0,0,0,123,125,7,1,0,0,124,123,1,0,0,0,125,126,1,
        0,0,0,126,124,1,0,0,0,126,127,1,0,0,0,127,42,1,0,0,0,128,132,7,2,
        0,0,129,131,7,3,0,0,130,129,1,0,0,0,131,134,1,0,0,0,132,130,1,0,
        0,0,132,133,1,0,0,0,133,44,1,0,0,0,134,132,1,0,0,0,135,137,7,4,0,
        0,136,135,1,0,0,0,137,138,1,0,0,0,138,136,1,0,0,0,138,139,1,0,0,
        0,139,140,1,0,0,0,140,141,6,22,0,0,141,46,1,0,0,0,142,146,5,59,0,
        0,143,145,8,5,0,0,144,143,1,0,0,0,145,148,1,0,0,0,146,144,1,0,0,
        0,146,147,1,0,0,0,147,149,1,0,0,0,148,146,1,0,0,0,149,150,6,23,0,
        0,150,48,1,0,0,0,9,0,105,113,115,121,126,132,138,146,1,6,0,0
    ]

class schemeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    BOOLEAN = 18
    QUOTE = 19
    STRING = 20
    NUMBER = 21
    IDENTIFIER = 22
    WS = 23
    COMMENT = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'if'", "'cond'", "'let'", "'quote'", "'+'", "'-'", 
            "'*'", "'/'", "'>'", "'<'", "'>='", "'<='", "'='", "'<>'", "'define'", 
            "'''" ]

    symbolicNames = [ "<INVALID>",
            "BOOLEAN", "QUOTE", "STRING", "NUMBER", "IDENTIFIER", "WS", 
            "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "BOOLEAN", "QUOTE", "STRING", 
                  "NUMBER", "IDENTIFIER", "WS", "COMMENT" ]

    grammarFileName = "scheme.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


